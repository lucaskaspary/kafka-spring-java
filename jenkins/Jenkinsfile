#!/usr/bin/env groovy
pipeline {
    agent any
    stages{
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('MVN dependencies checks') {
            agent {
                docker {
                    image 'maven:3-alpine'
                }
            }
            steps {
                script {
                    echo "MVN dependencies checks [unused / missing / bad scope / etc.]"
                    sh "mvn org.apache.maven.plugins:maven-dependency-plugin:analyze-report"
                }
            }
        }

        stage('Build') {
            agent {
                docker {
                    image 'maven:3-alpine'
                }
            }
            steps {
                script {
                    echo "Standard build"
                    sh "mvn clean install"
                }
            }
        }

        stage('SonarQube') {
            agent {
                docker {
                    image 'maven:3-alpine'
                }
            }
            steps {
                withSonarQubeEnv('sonarqube') {
                    echo "Static code analysis with SonarQube runner"
                    // TODO ensure the version of the plugin matches the one in the PARENT pom
                    sh "mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.6.0.1398:sonar -Dsonar.projectName=\"my_project ($BRANCH_NAME)\" -Dsonar.projectKey=my_project:$BRANCH_NAME -Pquality_control"
                }
            }
        }
    }
    post {
        always {
            echo 'Cleaning workspace'
            deleteDir()
        }
    }
}